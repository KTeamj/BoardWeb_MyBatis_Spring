<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

<!-- annotation 기반으로 Controller 셋팅 -->

<!-- com.springbook.biz 하위의 모든 클래스에서 @(annotation)을 
스캔할수 있도록 설정 -->
<context:component-scan base-package="com.springbook.biz">

</context:component-scan>

<!-- MultipartResolver 설정  : 파일 업로드 bean을 세팅 : 주의 빈이름을 임의로 변경하면 안된다.-->

	<bean id = "multipartResolver" class = "org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000"></property>
	</bean>
<!-- @COntrollerAdvice 와 @ExceptionHandler 어노테이션을 게더링 하기 위한 설정
네임스페이스에서 mvc추가 -->
<!-- MappingJackson2HttpMessageCOnverter : JSON 포멧으로 변환 처리함 -->
<mvc:annotation-driven></mvc:annotation-driven>

<!-- XML 기반의 예외 설정  주의 빈이름을 임의로 변경하면 안된다-->
<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	<property name="exceptionMappings">
		<props>
		<prop key ="java.lang.ArithmeticException"> common/arithmeticError.jsp</prop>
		<prop key ="java.lang.NullpointerException"> common/nullPointError.jsp</prop>
		<prop key ="java.lang.IllegalArgumentException">common/arithmeticError.jsp</prop>
		
		</props>
	</property>
	<property name="defaultErrorView" value = "common/error.jsp">
	
	
	</property>



</bean>

<!-- 다국어 처리 설정 <<시작>> -->
	<!-- 1. 다국어를 처리할 messaedSource 등록 -->
	<bean id ="messageSource" class ="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message.messageSource</value>
			</list>
		</property>
	</bean>
	<!-- 2. localeResolver 등록 -->
	<bean id = "localeResolver" class ="org.springframework.web.servlet.i18n.SessionLocaleResolver">
	</bean>
	
	<!-- 3. localechangeInterceptor 등록 -->
	<mvc:interceptors>
		<bean class ="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"></property>
		</bean>
	</mvc:interceptors>
<!-- 다국어 처리 설정 <<끝>> -->
	
	



</beans>
